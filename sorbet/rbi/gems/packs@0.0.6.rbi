# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `packs` gem.
# Please instead update this file by running `bin/tapioca gem packs`.

# source://packs-0.0.6/lib/packs/pack.rb:3
module Packs
  class << self
    # source://packs-0.0.6/lib/packs.rb:16
    sig { returns(T::Array[::Packs::Pack]) }
    def all; end

    # source://packs-0.0.6/lib/packs.rb:34
    sig { void }
    def bust_cache!; end

    # source://packs-0.0.6/lib/packs.rb:41
    sig { returns(::Packs::Private::Configuration) }
    def config; end

    # @yield [config]
    #
    # source://packs-0.0.6/lib/packs.rb:47
    sig { params(blk: T.proc.params(arg0: ::Packs::Private::Configuration).void).void }
    def configure(&blk); end

    # source://packs-0.0.6/lib/packs.rb:21
    sig { params(name: ::String).returns(T.nilable(::Packs::Pack)) }
    def find(name); end

    # source://packs-0.0.6/lib/packs.rb:26
    sig { params(file_path: T.any(::Pathname, ::String)).returns(T.nilable(::Packs::Pack)) }
    def for_file(file_path); end

    private

    # source://packs-0.0.6/lib/packs.rb:73
    sig { returns(T::Array[::Pathname]) }
    def package_glob_patterns; end

    # source://packs-0.0.6/lib/packs.rb:59
    sig { returns(T::Hash[::String, ::Packs::Pack]) }
    def packs_by_name; end
  end
end

# source://packs-0.0.6/lib/packs.rb:10
Packs::PACKAGE_FILE = T.let(T.unsafe(nil), String)

# source://packs-0.0.6/lib/packs/pack.rb:4
class Packs::Pack < ::T::Struct
  const :name, ::String
  const :path, ::Pathname
  const :raw_hash, T::Hash[T.untyped, T.untyped]
  const :relative_path, ::Pathname

  # source://packs-0.0.6/lib/packs/pack.rb:39
  sig { returns(T::Boolean) }
  def is_gem?; end

  # source://packs-0.0.6/lib/packs/pack.rb:34
  sig { returns(::String) }
  def last_name; end

  # source://packs-0.0.6/lib/packs/pack.rb:44
  sig { returns(T::Hash[T.untyped, T.untyped]) }
  def metadata; end

  # source://packs-0.0.6/lib/packs/pack.rb:28
  sig { params(relative: T::Boolean).returns(::Pathname) }
  def yml(relative: T.unsafe(nil)); end

  class << self
    # source://packs-0.0.6/lib/packs/pack.rb:13
    sig { params(package_yml_absolute_path: ::Pathname).returns(::Packs::Pack) }
    def from(package_yml_absolute_path); end

    # source://sorbet-runtime-0.5.10313/lib/types/struct.rb:13
    def inherited(s); end
  end
end

# source://packs-0.0.6/lib/packs/private/configuration.rb:4
module Packs::Private
  class << self
    # source://packs-0.0.6/lib/packs/private.rb:10
    sig { returns(::Pathname) }
    def root; end
  end
end

# source://packs-0.0.6/lib/packs/private/configuration.rb:5
class Packs::Private::Configuration < ::T::Struct
  prop :pack_paths, T::Array[::String]

  class << self
    # source://packs-0.0.6/lib/packs/private/configuration.rb:17
    sig { returns(::Packs::Private::Configuration) }
    def fetch; end

    # source://sorbet-runtime-0.5.10313/lib/types/struct.rb:13
    def inherited(s); end

    # source://packs-0.0.6/lib/packs/private/configuration.rb:26
    sig { params(config_hash: T::Hash[T.untyped, T.untyped]).returns(T::Array[::String]) }
    def pack_paths(config_hash); end
  end
end

# source://packs-0.0.6/lib/packs/private/configuration.rb:7
Packs::Private::Configuration::CONFIGURATION_PATHNAME = T.let(T.unsafe(nil), Pathname)

# source://packs-0.0.6/lib/packs/private/configuration.rb:9
Packs::Private::Configuration::DEFAULT_PACK_PATHS = T.let(T.unsafe(nil), Array)
